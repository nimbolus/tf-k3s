#cloud-config

%{if persistent_volume_dev != ""~}
fs_setup:
  - label: k3s-data
    filesystem: ext4
    device: ${persistent_volume_dev}

mounts:
  - [${persistent_volume_dev}, /mnt/persistent]
%{endif~}

write_files:
  - path: /root/k3s.env
    content: ${k3s_config}
    encoding: b64
%{if k3s_bootstrap_manifest_b64 != ""~}
  - path: /root/k3s-bootstrap.yaml
    content: ${k3s_bootstrap_manifest_b64}
    encoding: b64
%{endif~}
  ${indent(2, custom_cloud_config_write_files)}

runcmd:
  # setup persistence
  - mkdir -p /mnt/persistent/var/lib/rancher /mnt/persistent/etc/rancher
  - ln -s /mnt/persistent/var/lib/rancher /var/lib/rancher
  - ln -s /mnt/persistent/etc/rancher /etc/rancher
  # exclude containerd data from persistence
  - mkdir -p /var/lib/containerd /var/lib/rancher/k3s/agent
  - ln -s /var/lib/containerd /var/lib/rancher/k3s/agent/containerd
  # install k3s
  - set -a; . /root/k3s.env; set +a
%{if ip != null && is_server~}
  - export INSTALL_K3S_EXEC="$INSTALL_K3S_EXEC --node-ip=${ip} --tls-san=${ip}"
%{endif~}
%{if ip != null && !is_server~}
  - export INSTALL_K3S_EXEC="$INSTALL_K3S_EXEC --node-ip=${ip}"
%{endif~}
%{if external_ip != null~}
  - export INSTALL_K3S_EXEC="$INSTALL_K3S_EXEC --node-external-ip=${external_ip}"
%{endif~}
  - bash -c "for i in {1..6}; do (ping -c 10 -q github.com) && break || (echo 'failed to verify network, will try again soon'); done"
  - curl -sfL https://get.k3s.io | sh -
  # install cni plugins
  - wget --no-verbose -O /tmp/cni-plugins.tgz https://github.com/containernetworking/plugins/releases/download/${cni_plugins_version}/cni-plugins-linux-amd64-${cni_plugins_version}.tgz
  - mkdir -p /opt/cni/bin
  - tar -xzC /opt/cni/bin -f /tmp/cni-plugins.tgz
%{if k3s_bootstrap_manifest_b64 != ""~}
  - mkdir -p /var/lib/rancher/k3s/server/manifests/
  - mv /root/k3s-bootstrap.yaml /var/lib/rancher/k3s/server/manifests/
%{endif~}
  ${indent(2, custom_cloud_config_runcmd)}
